services:
  db:
    image: 'postgres:17-alpine'
    restart: always
    healthcheck:
      interval: 10s
      retries: 10
      test: ['CMD-SHELL', 'pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}']
      timeout: 45s
    environment:
      POSTGRES_DB: bc
      POSTGRES_USER: bc
      POSTGRES_PASSWORD: bc
    ports:
      - '5432:5432'
    volumes:
      - './pg.sql:/docker-entrypoint-initdb.d/pg.sql'

  keycloak-db:
    image: 'postgres:17-alpine'
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    healthcheck:
      interval: 10s
      retries: 10
      test: ['CMD-SHELL', 'pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}']
      timeout: 45s
    restart: on-failure

  keycloak:
    image: 'quay.io/keycloak/keycloak:26.1.2'
    volumes:
      - './keycloak/imports/realm-export.json:/opt/keycloak/data/import/realm-export.json'
    command: start-dev --import-realm
    ports:
      - '8080:8080'
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: Pa55w0rd
      KC_HEALTH_ENABLED: true
    healthcheck:
      test:
        [
          'CMD-SHELL',
          "exec 3<>/dev/tcp/keycloak/9000;echo -e \"GET /health/ready HTTP/1.1\r\nhost: keycloak:9000\r\nConnection: close\r\n\r\n\" >&3;grep \"HTTP/1.1 200 OK\" <&3"
        ]
      timeout: 10s
      interval: 30s
      retries: 3
      start_period: 5s
    depends_on:
      keycloak-db:
        condition: service_healthy

  nodejs:
    build:
      context: '.'
      dockerfile: Dockerfile
    restart: always
    healthcheck:
      interval: 5s
      retries: 10
      test: ['CMD', 'wget', '--spider', '-q', 'http://nodejs:1234/swagger']
      timeout: 30s
    environment:
      URL: http://localhost:1234
    ports:
      - '1234:1234'
    logging:
      options:
        max-file: '5'
        max-size: '10m'
    depends_on:
      db:
        condition: service_healthy
      mailcatcher:
        condition: service_healthy
      keycloak:
        condition: service_healthy

  mailcatcher:
    image: 'sj26/mailcatcher'
    healthcheck:
      interval: 10s
      retries: 10
      test: ['CMD', 'wget', '--spider', '-q', 'http://mailcatcher:1080']
      timeout: 45s
    restart: always
    ports:
      - '1080:1080'
      - '1025:1025'
    logging:
      options:
        max-file: '5'
        max-size: '10m'