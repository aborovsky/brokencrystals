name: "Security Tests"

on:
  pull_request:
    branches:
      - '**'

permissions:
  checks: write
  contents: read
  id-token: write

env:
  POSTGRES_DB: bc
  POSTGRES_PASSWORD: bc
  POSTGRES_USER: bc
  BRIGHT_HOSTNAME: development.playground.brightsec.com
  BRIGHT_PROJECT_ID: nKXKC76rXmrwttMt6c9gjP
  BRIGHT_TARGET_URL: http://127.0.0.1:3000

jobs:
  security-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Install application dependencies
        run: npm ci --no-audit

      - name: Start application
        run: docker compose up --wait

      - name: Verify application readiness
        run: |
          for i in {1..10}; do
            nc -zv 127.0.0.1 3000 && echo "Application is ready" && exit 0
            echo "Waiting for application to be ready..."
            sleep 5
          done
          echo "Application did not become ready in time" && exit 1

      - name: Set up Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      - name: Install SecTesterJS dependencies
        run: npm i --save=false --prefix .brightsec @sectester/core @sectester/repeater @sectester/scan @sectester/runner @sectester/reporter

      - name: Configure Bright credentials
        uses: ./.github/workflows/composite/configure-bright-credentials
        with:
          BRIGHT_HOSTNAME: ${{ env.BRIGHT_HOSTNAME }}
          BRIGHT_PROJECT_ID: ${{ env.BRIGHT_PROJECT_ID }}
          BRIGHT_TOKEN: ${{ secrets.BRIGHT_TOKEN }}

      - name: Run security tests
        run: |
          node --experimental-transform-types --experimental-strip-types --experimental-detect-module \
          --disable-warning=MODULE_TYPELESS_PACKAGE_JSON --disable-warning=ExperimentalWarning \
          --test-force-exit --test .brightsec/tests/*.test.ts --test-concurrency=4
        env:
          BRIGHT_HOSTNAME: ${{ env.BRIGHT_HOSTNAME }}
          BRIGHT_PROJECT_ID: ${{ env.BRIGHT_PROJECT_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRIGHT_TOKEN: ${{ secrets.BRIGHT_TOKEN }}
          BRIGHT_TARGET_URL: ${{ env.BRIGHT_TARGET_URL }}